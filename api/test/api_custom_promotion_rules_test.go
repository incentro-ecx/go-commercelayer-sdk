/*
Commerce Layer API

Testing CustomPromotionRulesApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package api

import (
	"context"
	openapiclient "github.com/incentro-dc/go-commercelayer-sdk/api"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_api_CustomPromotionRulesApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test CustomPromotionRulesApiService DELETECustomPromotionRulesCustomPromotionRuleId", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var customPromotionRuleId interface{}

		httpRes, err := apiClient.CustomPromotionRulesApi.DELETECustomPromotionRulesCustomPromotionRuleId(context.Background(), customPromotionRuleId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CustomPromotionRulesApiService GETBuyXPayYPromotionIdCustomPromotionRule", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var buyXPayYPromotionId interface{}

		httpRes, err := apiClient.CustomPromotionRulesApi.GETBuyXPayYPromotionIdCustomPromotionRule(context.Background(), buyXPayYPromotionId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CustomPromotionRulesApiService GETCustomPromotionRules", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.CustomPromotionRulesApi.GETCustomPromotionRules(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CustomPromotionRulesApiService GETCustomPromotionRulesCustomPromotionRuleId", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var customPromotionRuleId interface{}

		resp, httpRes, err := apiClient.CustomPromotionRulesApi.GETCustomPromotionRulesCustomPromotionRuleId(context.Background(), customPromotionRuleId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CustomPromotionRulesApiService GETExternalPromotionIdCustomPromotionRule", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var externalPromotionId interface{}

		httpRes, err := apiClient.CustomPromotionRulesApi.GETExternalPromotionIdCustomPromotionRule(context.Background(), externalPromotionId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CustomPromotionRulesApiService GETFixedAmountPromotionIdCustomPromotionRule", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var fixedAmountPromotionId interface{}

		httpRes, err := apiClient.CustomPromotionRulesApi.GETFixedAmountPromotionIdCustomPromotionRule(context.Background(), fixedAmountPromotionId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CustomPromotionRulesApiService GETFixedPricePromotionIdCustomPromotionRule", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var fixedPricePromotionId interface{}

		httpRes, err := apiClient.CustomPromotionRulesApi.GETFixedPricePromotionIdCustomPromotionRule(context.Background(), fixedPricePromotionId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CustomPromotionRulesApiService GETFreeGiftPromotionIdCustomPromotionRule", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var freeGiftPromotionId interface{}

		httpRes, err := apiClient.CustomPromotionRulesApi.GETFreeGiftPromotionIdCustomPromotionRule(context.Background(), freeGiftPromotionId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CustomPromotionRulesApiService GETFreeShippingPromotionIdCustomPromotionRule", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var freeShippingPromotionId interface{}

		httpRes, err := apiClient.CustomPromotionRulesApi.GETFreeShippingPromotionIdCustomPromotionRule(context.Background(), freeShippingPromotionId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CustomPromotionRulesApiService GETPercentageDiscountPromotionIdCustomPromotionRule", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var percentageDiscountPromotionId interface{}

		httpRes, err := apiClient.CustomPromotionRulesApi.GETPercentageDiscountPromotionIdCustomPromotionRule(context.Background(), percentageDiscountPromotionId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CustomPromotionRulesApiService GETPromotionIdCustomPromotionRule", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var promotionId interface{}

		httpRes, err := apiClient.CustomPromotionRulesApi.GETPromotionIdCustomPromotionRule(context.Background(), promotionId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CustomPromotionRulesApiService PATCHCustomPromotionRulesCustomPromotionRuleId", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var customPromotionRuleId interface{}

		resp, httpRes, err := apiClient.CustomPromotionRulesApi.PATCHCustomPromotionRulesCustomPromotionRuleId(context.Background(), customPromotionRuleId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CustomPromotionRulesApiService POSTCustomPromotionRules", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.CustomPromotionRulesApi.POSTCustomPromotionRules(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
