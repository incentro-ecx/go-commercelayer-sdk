/*
Commerce Layer API

Testing ReservedStocksApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package api

import (
	"context"
	openapiclient "github.com/incentro-dc/go-commercelayer-sdk/api"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_api_ReservedStocksApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ReservedStocksApiService GETReservedStocks", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.ReservedStocksApi.GETReservedStocks(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ReservedStocksApiService GETReservedStocksReservedStockId", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var reservedStockId interface{}

		resp, httpRes, err := apiClient.ReservedStocksApi.GETReservedStocksReservedStockId(context.Background(), reservedStockId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ReservedStocksApiService GETStockItemIdReservedStock", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var stockItemId interface{}

		httpRes, err := apiClient.ReservedStocksApi.GETStockItemIdReservedStock(context.Background(), stockItemId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ReservedStocksApiService GETStockReservationIdReservedStock", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var stockReservationId interface{}

		httpRes, err := apiClient.ReservedStocksApi.GETStockReservationIdReservedStock(context.Background(), stockReservationId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
